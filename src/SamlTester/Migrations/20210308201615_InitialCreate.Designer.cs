// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SAMLTester.Context;

namespace SAMLTester.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20210308201615_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.12");

            modelBuilder.Entity("SAMLTester.Context.PartnerCertificate", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<Guid>("PartnerServiceProviderConfigurationId")
                        .HasColumnType("TEXT");

                    b.Property<string>("String")
                        .HasColumnType("TEXT");

                    b.Property<string>("Thumbprint")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("GETDATE()");

                    b.HasKey("Id");

                    b.HasIndex("PartnerServiceProviderConfigurationId");

                    b.ToTable("PartnerCertificates");
                });

            modelBuilder.Entity("SAMLTester.Context.PartnerServiceProviderConfiguration", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<string>("AssertionConsumerServiceUrl")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<bool>("EncryptAssertion")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<bool>("SignSamlResponse")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("UpdatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("GETDATE()");

                    b.HasKey("Id");

                    b.ToTable("PartnerServiceProviderConfigurations");
                });

            modelBuilder.Entity("SAMLTester.Context.PartnerCertificate", b =>
                {
                    b.HasOne("SAMLTester.Context.PartnerServiceProviderConfiguration", "PartnerServiceProviderConfiguration")
                        .WithMany("PartnerCertificates")
                        .HasForeignKey("PartnerServiceProviderConfigurationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
